name: Test PostgreSQL Migrator

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test-migration:
    runs-on: ubuntu-latest

    services:
      postgres13:
        image: postgres:13
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install PostgreSQL client
        run: sudo apt-get update && sudo apt-get install -y postgresql-client

      - name: Wait for PostgreSQL to be ready
        run: |
          for i in {1..10}; do
            if pg_isready -h localhost -U testuser; then break; fi
            sleep 3
          done

      - name: Insert sample data
        run: |
          PGPASSWORD=testpass psql -h localhost -U testuser -d testdb -c \
            "CREATE TABLE test_table(id SERIAL PRIMARY KEY, name TEXT); INSERT INTO test_table(name) VALUES ('foo'), ('bar');"

      - name: Stop PostgreSQL and copy data directory
        run: |
          POSTGRES_CID=$(docker ps -qf ancestor=postgres:13)
          docker stop "$POSTGRES_CID"
          docker cp "$POSTGRES_CID":/var/lib/postgresql/data ./pgdata-old

      - name: Sanity check postmaster.pid must be gone
        run: |
          if [ -f ./pgdata-old/postmaster.pid ]; then
            echo "❌ postmaster.pid still present — upgrade will fail"
            cat ./pgdata-old/postmaster.pid
            exit 1
          fi

      - name: Prepare new data directory and fix permissions
        run: |
          mkdir -p pgdata-new
          sudo chown -R 70:70 pgdata-old pgdata-new

      - name: Build migrator image
        run: docker build -t pg-migrator-test .

      - name: Run migration
        run: |
          docker run --rm \
            -v $PWD/pgdata-old:/var/lib/postgresql/old:ro \
            -v $PWD/pgdata-new:/var/lib/postgresql/new:rw \
            -e OLD_PG_VERSION=13 \
            -e NEW_PG_VERSION=16 \
            -e UID=70 \
            -e GID=70 \
            pg-migrator-test || (
              echo "❌ Migration failed. Dumping logs:"
              find pgdata-new/pg_upgrade_output.d -name pg_upgrade_server.log -exec cat {} +
              exit 1
            )

      - name: Verify migration succeeded (PG_VERSION = 16)
        run: |
          echo "PG_VERSION content:"
          cat pgdata-new/PG_VERSION
          grep -q "^16" pgdata-new/PG_VERSION